events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    
    # Upstream API servers
    upstream api_backend {
        server api:3000;
        keepalive 32;
    }
    
    # HTTP server (redirect to HTTPS in production)
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }
        
        # API routes
        location /api/ {
            # Apply rate limiting
            limit_req zone=api burst=20 nodelay;
            
            # Apply stricter rate limiting for auth endpoints
            location /api/auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://api_backend;
                include /etc/nginx/proxy_params;
            }
            
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }
        
        # Default location
        location / {
            proxy_pass http://api_backend;
            include /etc/nginx/proxy_params;
        }
    }
    
    # HTTPS server (uncomment and configure for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name your-domain.com;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     location /api/ {
    #         limit_req zone=api burst=20 nodelay;
    #         
    #         location /api/auth/ {
    #             limit_req zone=auth burst=10 nodelay;
    #             proxy_pass http://api_backend;
    #             include /etc/nginx/proxy_params;
    #         }
    #         
    #         proxy_pass http://api_backend;
    #         include /etc/nginx/proxy_params;
    #     }
    #     
    #     location / {
    #         proxy_pass http://api_backend;
    #         include /etc/nginx/proxy_params;
    #     }
    # }
}